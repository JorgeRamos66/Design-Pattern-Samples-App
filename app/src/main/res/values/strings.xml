<resources>
    <string name="app_name">Design Pattern Samples</string>

    <!--    Design Patterns Titles  -->
    <!--    Creational patterns -->
    <string name="title_builder">Builder Pattern</string>
    <string name="title_abstract_factory">Abstract Factory Pattern</string>
    <string name="title_factory">Factory Pattern</string>
    <string name="title_prototype">Prototype Pattern</string>
    <string name="title_singleton">Singleton Pattern</string>

    <!--    Structural patterns -->
    <string name="title_adapter">Adapter Pattern</string>
    <string name="title_bridge">Bridge Pattern</string>
    <string name="title_composite">Composite Pattern</string>
    <string name="title_decorator">Decorator Pattern</string>
    <string name="title_facade">Facade Pattern</string>
    <string name="title_flyweight">Flyweight Pattern</string>
    <string name="title_proxy">Proxy Pattern</string>

    <!--    Behavioral patterns -->
    <string name="title_chain_of_responsibility">Chain Of Responsibility Pattern</string>
    <string name="title_command">Command Pattern</string>
    <string name="title_iterator">Iterator Pattern</string>
    <string name="title_mediator">Mediator Pattern</string>
    <string name="title_memento">Memento Pattern</string>
    <string name="title_observer">Observer Pattern</string>
    <string name="title_state">State Pattern</string>
    <string name="title_strategy">Strategy Pattern</string>
    <string name="title_template">Template Pattern</string>
    <string name="title_visitor">Visitor Pattern</string>

    <!-- Menu-->
    <string name="about">About</string>
    <string name="libraries">Libraries</string>
    <string name="info_design_patterns_app_icon">Design Patterns App Icon</string>
    <string name="template_app_version" translatable="false">v%1$s</string>
    <string name="info_design_pattern_image">Puzzle piece image as design pattern card icon</string>

    <string name="code_sample">Code Sample</string>

    <!-- Pattern Descriptions-->
    <!--    TODO Update descriptions-->
    <string name="desc_abstract_factory">A creational design pattern that encapsulates a group of individual factories that have a common theme without specifying their concrete classes.</string>
    <string name="desc_adapter">A structural design pattern that lets incompatible interfaces work in harmony by providing a wrapper to make the existing classes work without modifying the source code using one of the existing interfaces.</string>
    <string name="desc_bridge">A structural design pattern that decouples abstractions from their implementation.</string>
    <string name="desc_builder">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_chain_of_responsibility">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_command">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_composite">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_decorator">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_facade">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_factory">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_flyweight">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_iterator">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_main">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_mediator">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_memento">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_observer">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_prototype">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_proxy">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_singleton">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_state">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_strategy">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_template">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>
    <string name="desc_visitor">Encapsulates a group of individual factories that have a common theme without specifying their concrete classes</string>


</resources>
