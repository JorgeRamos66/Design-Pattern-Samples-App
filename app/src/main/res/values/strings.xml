<resources>
    <string name="app_name">Design Pattern Samples</string>

    <!--Patrones creacionales -->
    <string name="title_builder">Builder</string>
    <string name="title_abstract_factory">Abstract Factory</string>
    <string name="title_factory">Factory</string>
    <string name="title_prototype">Prototype</string>
    <string name="title_singleton">Singleton</string>

    <!--Patrones estructurales -->
    <string name="title_adapter">Adapter</string>
    <string name="title_bridge">Bridge</string>
    <string name="title_composite">Composite</string>
    <string name="title_decorator">Decorator</string>
    <string name="title_facade">Facade</string>
    <string name="title_flyweight">Flyweight</string>
    <string name="title_proxy">Proxy</string>

    <!--Patrones de comportamiento -->
    <string name="title_chain_of_responsibility">Chain Of Responsibility</string>
    <string name="title_command">Command</string>
    <string name="title_iterator">Iterator</string>
    <string name="title_mediator">Mediator</string>
    <string name="title_memento">Memento</string>
    <string name="title_observer">Observer</string>
    <string name="title_state">State</string>
    <string name="title_strategy">Strategy</string>
    <string name="title_template">Template Method</string>
    <string name="title_visitor">Visitor</string>

    <!-- Acerca de la actividad-->
    <string name="libraries">Libraries</string>
    <string name="info_design_patterns_app_icon">Design Patterns App Icon</string>
    <string name="template_app_version" translatable="false">v%1$s</string>
    <string name="menu_view_source_code">View Source Code</string>
    <string name="title_privacy_policy">Privacy Policy</string>


    <!--Actividad principal-->
    <string name="info_design_pattern_image">Puzzle piece image as design pattern card icon</string>
    <string name="menu_about">About</string>
    <string name="menu_settings">Settings</string>
    <string name="app_update_success">Yaay! App Updated</string>
    <string name="app_update_cancelled">App Update Cancelled</string>
    <string name="app_update_failed">App Update Failed</string>

    <!--Actividad de detalle del patrón de diseño-->
    <string name="title_code_sample">Code Sample</string>

    <!--Configuración Actividad-->
    <string name="title_theme_preference">App Theme</string>
    <string name="key_theme_preference" translatable="false">theme</string>
    <string name="pref_summary_theme_system_above_q">System Default</string>
    <string name="pref_summary_theme_system_below_q">Set By Battery Saver</string>
    <string name="pref_summary_theme_light">Light Theme</string>
    <string name="pref_summary_theme_dark">Dark Theme</string>

    <!--Descripciones de patrones de diseño-->
    <string name="desc_abstract_factory">
        Un patrón de diseño creacional que encapsula un grupo de fábricas individuales que tienen un
        tema común sin especificar sus clases concretas.
    </string>

    <string name="desc_adapter">
        Un patrón de diseño estructural que permite que interfaces incompatibles funcionen en armonía al proporcionar una
        contenedor para hacer que las clases existentes funcionen sin modificar el código fuente usando uno de los
        interfaces existentes.
    </string>

    <string name="desc_bridge">
        Un patrón de diseño estructural que desacopla las abstracciones de su implementación. Tiene una
        Estructura muy similar al patrón adaptador.
    </string>

    <string name="desc_builder">
        Un patrón de diseño creacional que proporciona la construcción paso a paso de objetos complejos.
    </string>

    <string name="desc_chain_of_responsibility">
        Un patrón de diseño de comportamiento que consiste en una cadena de receptores conocidos como manejadores, cada manejador
        procesará una solicitud y la pasará al siguiente para su posterior procesamiento.
    </string>

    <string name="desc_command">
        Un patrón de diseño de comportamiento patrón de diseño de comportamiento en el que se utiliza un objeto para
        encapsula toda la información necesaria para realizar una acción o desencadenar un evento en un momento posterior.
    </string>

    <string name="desc_composite">
        Un patrón de diseño estructural donde un grupo de objetos se trata como uno solo.
    </string>

    <string name="desc_observer">
        Un patrón de diseño de comportamiento en el que un objeto conocido como editor mantiene una lista de objetos.
        conocidos como observadores que reciben notificaciones sobre los cambios de estado.
    </string>

    <string name="desc_state">
        Un patrón de diseño de comportamiento donde un objeto altera su comportamiento cuando su estado interno
        cambios.
    </string>

    <string name="desc_decorator">
        Un patrón de diseño estructural que agrega comportamiento a un objeto usando un contenedor sin
        alterar la estructura de los objetos afectados.
    </string>

    <string name="desc_facade">
        Un patrón de diseño estructural que abstrae las complejidades al proporcionar una interfaz simplificada.
    </string>

    <string name="desc_factory">
        Un patrón de diseño creacional que proporciona una interfaz para crear.
        objetos en tiempo de ejecución.
    </string>

    <string name="desc_singleton">
        Un patrón de diseño creacional que garantiza que el objeto creado tenga una sola instancia.
    </string>

    <string name="desc_mediator">
        Un patrón de diseño de comportamiento que impone un acoplamiento flexible entre objetos al reducir
        la complejidad de la comunicación en la forma en que interactúan.
    </string>

    <string name="desc_memento">
        Un diseño de comportamiento que proporciona la capacidad de restaurar un objeto a su estado anterior. 
        Se implementa con tres objetos: el creador, un cuidador y un recuerdo.
    </string>

    <string name="desc_prototype">
        Un patrón de diseño creacional que copia una instancia existente de un objeto y hace
        cambios de personalización en lugar de crear un nuevo objeto.
    </string>

    <string name="desc_proxy">
        Un patrón de diseño estructural que proporciona un objeto marcador de posición que ayuda con el control de acceso.
        al objeto original implementando una capa adicional de encapsulación.
    </string>

    <string name="desc_strategy">
        Un patrón de diseño de comportamiento que selecciona un algoritmo para usar de una familia de algoritmos.
        durante el tiempo de ejecución.
    </string>

    <string name="desc_template_method">
        El método de plantilla se incluye en los patrones de diseño de comportamiento y constituye un método en un
        superclase, generalmente una superclase abstracta, y define el esqueleto de una operación en
        en términos de una serie de medidas de alto nivel. Estos pasos se implementan a su vez mediante
        métodos auxiliares en la misma clase que el método de plantilla.
    </string>

    <string name="desc_visitor">
        Un patrón de diseño de comportamiento que le permite agregar nuevas operaciones a objetos existentes sin
        modificando su estructura separando el algoritmo de la estructura de los objetos.
    </string>

    <string name="desc_iterator">
       Un patrón de diseño de comportamiento en el que se utiliza un iterador para atravesar un contenedor y
       acceder a los elementos del contenedor.
    </string>

    <string name="desc_flyweight">
        Un patrón de diseño estructural que reduce la cantidad de objetos creados al ajustar más objetos.
        en la cantidad de RAM disponible compartiendo partes comunes de estado entre múltiples objetos
        por lo tanto, disminuye la huella de memoria y aumenta el rendimiento.

        Puede parecer similar a singleton, sin embargo, solo debería haber una instancia de Singleton, una vez
        Se crea el objeto requerido, no podemos crear más. mientras que una clase de peso mosca puede tener
        múltiples instancias con diferentes atributos extrínsecos proporcionados por el cliente. En este caso
        la hora del día.
    </string>

    <!--Clasificación-->
    <string name="info_rating_message">
        Si encuentra útil la aplicación o ve aspectos que podrían mejorarse, no dude en dejarnos
        Algunos comentarios sobre Play Store y califican la aplicación.
    </string>
    <string name="title_rating_dialog">App Rating</string>
    <string name="label_dialog_negative_button">Later</string>
    <string name="label_dialog_positive_button">Rate</string>
    <string name="menu_share_app">Share App</string>


</resources>
